--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--


module Model.Main.Types where

import DA.Optional
import DA.Map

-- In the workflow, a primary provider creates referral for the patient
-- and sending them to a specialist
data ProviderType = Primary | Specialist deriving (Eq, Show)

-- Reference data for patients
data PatientDemographics = PatientDemographics with
  patientGender : Text
  patientSocialSecurityNumber : Text
  patientDateOfBirth : Text
  patientAddressLine1 : Text
  patientAddressLine2 : Text
  patientCity : Text
  patientState : Text
  patientZipCode : Text
    deriving (Eq, Show)

-- Reference data for healthcare provider (either primary or specialist)
data ProviderDemographics = ProviderDemographics with
  providerHIN : Text
  providerTaxID : Text
  providerBankDFINumber : Text
  providerBankAccountNumber : Text
  providerType : ProviderType
  providerAddressFirstLine : Text
  providerAddressSecondLine : Text
  providerCity : Text
  providerState : Text
  providerZipCode : Text
    deriving (Eq, Show)

-- Reference data for insurance companies
data PayerDemographics = PayerDemographics with
  payerHIN : Text -- HIN: Health Industry Number
  payerTaxID : Text
  payerBankDFINumber : Text
  payerBankAccountNumber : Text
  payerAddressFirstLine : Text
  payerAddressSecondLine : Text
  payerCity : Text
  payerState : Text
  payerZipCode : Text
    deriving (Eq, Show)

-- Type of the policy between the patient and the insurance company
data PolicyType = Gold | Bronze deriving (Eq, Show)

-- Mapping between procedure codes and fees
type FeeSchedule = Map ProcedureCode Decimal

data ProcedureCode = Preventative_Care | Physicals | Sick_Visits | X_Ray_Wrist_2_Views | X_Ray_Wrist_3_Views
  deriving (Enum, Eq, Show, Ord)

readEnum: Show a => Text -> [a] -> Text -> a
readEnum name enum t = fromSomeNote err $ Prelude.lookup t textsWithProcCodes
  where
    textsWithProcCodes = zip texts enum
    texts = map show enum
    err = "Error reading " <> name <> ": " <> t

data DiagnosisCode = Fracture_of_scaphoid_bone_right_wrist_S62_001 |
  Closed_fracture_of_scaphoid_bone_right_wrist_S62_001A |
  Open_fracture_of_scaphoid_bone_right_wrist_S62_001B |
  Fracture_of_scaphoid_bone_left_wrist_S62_002 |
  Closed_fracture_of_scaphoid_bone_left_wrist_S62_002A |
  Open_fracture_of_scaphoid_bone_left_wrist_S62_002B |
  Fracture_of_scaphoid_bone_unspecified_S62_009 |
  Closed_fracture_of_scaphoid_bone_unspecified_S62_009A |
  Open_fracture_of_scaphoid_bone_unspecified_S62_009B |
  Pain_in_right_arm_M79_601 |
  Pain_in_left_arm_M79_602 |
  Pain_in_arm_unspecified_M79_603
  deriving (Eq, Show, Ord)

-- The encounter parameters of an appointment
data EncounterDetails = EncounterDetails with
  patient : Party
  encounterId : Text
  procedureCode : ProcedureCode
  diagnosisCode : DiagnosisCode
  allowedAmount : Optional Decimal
  coPay : Optional Decimal
  patientResponsibility : Optional Decimal
  siteServiceCode : Text
  appointmentPriority : Text
    deriving (Eq, Show)
